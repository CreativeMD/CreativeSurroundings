buildscript {
    repositories {
        maven {
            url "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://repo.spongepowered.org/repository/maven-public/"
        }
        gradlePluginPortal()
        //jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

//apply from: 'configuration.gradle'

version = mod_version
group = mod_group
archivesBaseName = mod_id

if (file('secrets.properties').exists()) {
    println "Loading parameters from secrets.properties"
    ext.secrets = new Properties()
    file('secrets.properties').withReader {ext.secrets.load(it)}
}

repositories {
    maven { url = "https://dvs1.progwml6.com/files/maven" }
    maven { url = "https://maven.tterrag.com" }
    maven { url = "https://repo.elytradev.com/" }
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = 'https://maven.mcmoddev.com' }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.covers1624.net/" }
    maven { url = "https://cursemaven.com" }
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)

            if (project.ext.has('secrets')) {
                if (secrets.uuid != null)
                    args '--uuid', "${secrets.uuid}"
                if (secrets.username != null)
                    args '--username', "${secrets.username}"
                if (secrets.password != null)
                    args '--password', "${secrets.password}"
            }
        }

        server {
            property 'fml.coreMods.load', mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

mixin {
    add sourceSets.main, "mixins.dsurround.refmap.json"
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    compile "curse.maven:CraftStudioAPI-268704:2661859"
    compile "com.animania:animania-${minecraft_version}-base:2.0.3.28"
    compile "com.animania:animania-${minecraft_version}-farm:1.0.2.28"
    compile "com.animania:animania-${minecraft_version}-extra:1.0.2.28"
    compileOnly "curse.maven:CosmeticArmorReworked-237307:2660068"
    compileOnly "curse.maven:IronChest-228756:2747935"
    compileOnly "curse.maven:TheOneProbe-245211:2667280"
    compileOnly "mezz.jei:jei_${minecraft_version}:4.16.1.301"

    if (fileTree(dir: 'libs').filter { it.name.startsWith('OreLib') }.getFiles().size() == 0)
        compile "curse.maven:OreLib-307806:2820815"

    compileOnly "team.chisel:Chisel:MC${minecraft_version}-1.0.2.45"
    compileOnly "curse.maven:BiomesOPlenty-220318:2715506"
    compileOnly "curse.maven:CreativeCore-257814:3467576"
    compileOnly "curse.maven:LittleTiles-257818:3483878"
    compileOnly "curse.maven:SereneSeasons-291874:2799213"
    compileOnly "curse.maven:CTM-267602:2915363"

    embed("org.spongepowered:mixin:0.8") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': minecraft_version, 'mod_description': mod_description,
                'mod_author': mod_author, 'update_url': update_url
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    // Add CREDITS.md
    into('/') {
        from('CREDITS.md')
    }

    manifest {
        attributes([
                "FMLCorePlugin": mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id),
                "FMLCorePluginContainsFMLMod": "false",
                "ForceLoadAsMod": "true",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id),
                "Specification-Title": "${mod_id}",
                "Specification-Vendor": "OreCruncher",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${minecraft_version}-${mod_version}",
                "Implementation-Vendor" :"OreCruncher",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}